#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VirtualClassroom.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CTMLive")]
	public partial class VirtualClassroomDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblTC(TblTC instance);
    partial void UpdateTblTC(TblTC instance);
    partial void DeleteTblTC(TblTC instance);
    partial void InsertTblClassroom(TblClassroom instance);
    partial void UpdateTblClassroom(TblClassroom instance);
    partial void DeleteTblClassroom(TblClassroom instance);
    partial void InsertTblFC(TblFC instance);
    partial void UpdateTblFC(TblFC instance);
    partial void DeleteTblFC(TblFC instance);
    partial void InsertTblFCPC(TblFCPC instance);
    partial void UpdateTblFCPC(TblFCPC instance);
    partial void DeleteTblFCPC(TblFCPC instance);
    partial void InsertTblForm(TblForm instance);
    partial void UpdateTblForm(TblForm instance);
    partial void DeleteTblForm(TblForm instance);
    partial void InsertTblFormAnswer(TblFormAnswer instance);
    partial void UpdateTblFormAnswer(TblFormAnswer instance);
    partial void DeleteTblFormAnswer(TblFormAnswer instance);
    partial void InsertTblPC(TblPC instance);
    partial void UpdateTblPC(TblPC instance);
    partial void DeleteTblPC(TblPC instance);
    partial void InsertTblSC(TblSC instance);
    partial void UpdateTblSC(TblSC instance);
    partial void DeleteTblSC(TblSC instance);
    partial void InsertTblModerator(TblModerator instance);
    partial void UpdateTblModerator(TblModerator instance);
    partial void DeleteTblModerator(TblModerator instance);
    #endregion
		
		public VirtualClassroomDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CTMLiveConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VirtualClassroomDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VirtualClassroomDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VirtualClassroomDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VirtualClassroomDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblTC> TblTCs
		{
			get
			{
				return this.GetTable<TblTC>();
			}
		}
		
		public System.Data.Linq.Table<TblClassroom> TblClassrooms
		{
			get
			{
				return this.GetTable<TblClassroom>();
			}
		}
		
		public System.Data.Linq.Table<TblFC> TblFCs
		{
			get
			{
				return this.GetTable<TblFC>();
			}
		}
		
		public System.Data.Linq.Table<TblFCPC> TblFCPCs
		{
			get
			{
				return this.GetTable<TblFCPC>();
			}
		}
		
		public System.Data.Linq.Table<TblForm> TblForms
		{
			get
			{
				return this.GetTable<TblForm>();
			}
		}
		
		public System.Data.Linq.Table<TblFormAnswer> TblFormAnswers
		{
			get
			{
				return this.GetTable<TblFormAnswer>();
			}
		}
		
		public System.Data.Linq.Table<TblPC> TblPCs
		{
			get
			{
				return this.GetTable<TblPC>();
			}
		}
		
		public System.Data.Linq.Table<TblSC> TblSCs
		{
			get
			{
				return this.GetTable<TblSC>();
			}
		}
		
		public System.Data.Linq.Table<TblModerator> TblModerators
		{
			get
			{
				return this.GetTable<TblModerator>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblTC")]
	public partial class TblTC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private string _ClassroomId;
		
		private string _Id;
		
		private string _Name;
		
		private bool _Audio;
		
		private bool _Video;
		
		private int _Volume;
		
		private EntitySet<TblPC> _TblPCs;
		
		private EntitySet<TblModerator> _TblModerators;
		
		private EntityRef<TblClassroom> _TblClassroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnClassroomIdChanging(string value);
    partial void OnClassroomIdChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAudioChanging(bool value);
    partial void OnAudioChanged();
    partial void OnVideoChanging(bool value);
    partial void OnVideoChanged();
    partial void OnVolumeChanging(int value);
    partial void OnVolumeChanged();
    #endregion
		
		public TblTC()
		{
			this._TblPCs = new EntitySet<TblPC>(new Action<TblPC>(this.attach_TblPCs), new Action<TblPC>(this.detach_TblPCs));
			this._TblModerators = new EntitySet<TblModerator>(new Action<TblModerator>(this.attach_TblModerators), new Action<TblModerator>(this.detach_TblModerators));
			this._TblClassroom = default(EntityRef<TblClassroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._TblClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audio", DbType="Bit NOT NULL")]
		public bool Audio
		{
			get
			{
				return this._Audio;
			}
			set
			{
				if ((this._Audio != value))
				{
					this.OnAudioChanging(value);
					this.SendPropertyChanging();
					this._Audio = value;
					this.SendPropertyChanged("Audio");
					this.OnAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="Bit NOT NULL")]
		public bool Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int NOT NULL")]
		public int Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTC_TblPC", Storage="_TblPCs", ThisKey="Uid", OtherKey="TcUid")]
		public EntitySet<TblPC> TblPCs
		{
			get
			{
				return this._TblPCs;
			}
			set
			{
				this._TblPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTC_TblModerator", Storage="_TblModerators", ThisKey="Uid", OtherKey="TcUid")]
		public EntitySet<TblModerator> TblModerators
		{
			get
			{
				return this._TblModerators;
			}
			set
			{
				this._TblModerators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblTC", Storage="_TblClassroom", ThisKey="ClassroomId", OtherKey="Id", IsForeignKey=true)]
		public TblClassroom TblClassroom
		{
			get
			{
				return this._TblClassroom.Entity;
			}
			set
			{
				TblClassroom previousValue = this._TblClassroom.Entity;
				if (((previousValue != value) 
							|| (this._TblClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblClassroom.Entity = null;
						previousValue.TblTCs.Remove(this);
					}
					this._TblClassroom.Entity = value;
					if ((value != null))
					{
						value.TblTCs.Add(this);
						this._ClassroomId = value.Id;
					}
					else
					{
						this._ClassroomId = default(string);
					}
					this.SendPropertyChanged("TblClassroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblPCs(TblPC entity)
		{
			this.SendPropertyChanging();
			entity.TblTC = this;
		}
		
		private void detach_TblPCs(TblPC entity)
		{
			this.SendPropertyChanging();
			entity.TblTC = null;
		}
		
		private void attach_TblModerators(TblModerator entity)
		{
			this.SendPropertyChanging();
			entity.TblTC = this;
		}
		
		private void detach_TblModerators(TblModerator entity)
		{
			this.SendPropertyChanging();
			entity.TblTC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblClassroom")]
	public partial class TblClassroom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _SessionId;
		
		private System.Nullable<int> _IsActive;
		
		private EntitySet<TblTC> _TblTCs;
		
		private EntitySet<TblFC> _TblFCs;
		
		private EntitySet<TblForm> _TblForms;
		
		private EntitySet<TblPC> _TblPCs;
		
		private EntitySet<TblSC> _TblSCs;
		
		private EntitySet<TblModerator> _TblModerators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public TblClassroom()
		{
			this._TblTCs = new EntitySet<TblTC>(new Action<TblTC>(this.attach_TblTCs), new Action<TblTC>(this.detach_TblTCs));
			this._TblFCs = new EntitySet<TblFC>(new Action<TblFC>(this.attach_TblFCs), new Action<TblFC>(this.detach_TblFCs));
			this._TblForms = new EntitySet<TblForm>(new Action<TblForm>(this.attach_TblForms), new Action<TblForm>(this.detach_TblForms));
			this._TblPCs = new EntitySet<TblPC>(new Action<TblPC>(this.attach_TblPCs), new Action<TblPC>(this.detach_TblPCs));
			this._TblSCs = new EntitySet<TblSC>(new Action<TblSC>(this.attach_TblSCs), new Action<TblSC>(this.detach_TblSCs));
			this._TblModerators = new EntitySet<TblModerator>(new Action<TblModerator>(this.attach_TblModerators), new Action<TblModerator>(this.detach_TblModerators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblTC", Storage="_TblTCs", ThisKey="Id", OtherKey="ClassroomId")]
		public EntitySet<TblTC> TblTCs
		{
			get
			{
				return this._TblTCs;
			}
			set
			{
				this._TblTCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblFC", Storage="_TblFCs", ThisKey="Id", OtherKey="ClassroomId")]
		public EntitySet<TblFC> TblFCs
		{
			get
			{
				return this._TblFCs;
			}
			set
			{
				this._TblFCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblForm", Storage="_TblForms", ThisKey="Id", OtherKey="ClassroomId")]
		public EntitySet<TblForm> TblForms
		{
			get
			{
				return this._TblForms;
			}
			set
			{
				this._TblForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblPC", Storage="_TblPCs", ThisKey="Id", OtherKey="ClassroomId")]
		public EntitySet<TblPC> TblPCs
		{
			get
			{
				return this._TblPCs;
			}
			set
			{
				this._TblPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblSC", Storage="_TblSCs", ThisKey="Id", OtherKey="ClassroomId")]
		public EntitySet<TblSC> TblSCs
		{
			get
			{
				return this._TblSCs;
			}
			set
			{
				this._TblSCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblModerator", Storage="_TblModerators", ThisKey="Id", OtherKey="ClassroomId")]
		public EntitySet<TblModerator> TblModerators
		{
			get
			{
				return this._TblModerators;
			}
			set
			{
				this._TblModerators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblTCs(TblTC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = this;
		}
		
		private void detach_TblTCs(TblTC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = null;
		}
		
		private void attach_TblFCs(TblFC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = this;
		}
		
		private void detach_TblFCs(TblFC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = null;
		}
		
		private void attach_TblForms(TblForm entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = this;
		}
		
		private void detach_TblForms(TblForm entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = null;
		}
		
		private void attach_TblPCs(TblPC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = this;
		}
		
		private void detach_TblPCs(TblPC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = null;
		}
		
		private void attach_TblSCs(TblSC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = this;
		}
		
		private void detach_TblSCs(TblSC entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = null;
		}
		
		private void attach_TblModerators(TblModerator entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = this;
		}
		
		private void detach_TblModerators(TblModerator entity)
		{
			this.SendPropertyChanging();
			entity.TblClassroom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblFC")]
	public partial class TblFC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private string _ClassroomId;
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<TblFCPC> _TblFCPCs;
		
		private EntityRef<TblClassroom> _TblClassroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnClassroomIdChanging(string value);
    partial void OnClassroomIdChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TblFC()
		{
			this._TblFCPCs = new EntitySet<TblFCPC>(new Action<TblFCPC>(this.attach_TblFCPCs), new Action<TblFCPC>(this.detach_TblFCPCs));
			this._TblClassroom = default(EntityRef<TblClassroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._TblClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblFC_TblFCPC", Storage="_TblFCPCs", ThisKey="Uid", OtherKey="FcUid")]
		public EntitySet<TblFCPC> TblFCPCs
		{
			get
			{
				return this._TblFCPCs;
			}
			set
			{
				this._TblFCPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblFC", Storage="_TblClassroom", ThisKey="ClassroomId", OtherKey="Id", IsForeignKey=true)]
		public TblClassroom TblClassroom
		{
			get
			{
				return this._TblClassroom.Entity;
			}
			set
			{
				TblClassroom previousValue = this._TblClassroom.Entity;
				if (((previousValue != value) 
							|| (this._TblClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblClassroom.Entity = null;
						previousValue.TblFCs.Remove(this);
					}
					this._TblClassroom.Entity = value;
					if ((value != null))
					{
						value.TblFCs.Add(this);
						this._ClassroomId = value.Id;
					}
					else
					{
						this._ClassroomId = default(string);
					}
					this.SendPropertyChanged("TblClassroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblFCPCs(TblFCPC entity)
		{
			this.SendPropertyChanging();
			entity.TblFC = this;
		}
		
		private void detach_TblFCPCs(TblFCPC entity)
		{
			this.SendPropertyChanging();
			entity.TblFC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblFCPC")]
	public partial class TblFCPC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private System.Guid _FcUid;
		
		private System.Guid _PcUid;
		
		private int _Position;
		
		private EntityRef<TblFC> _TblFC;
		
		private EntityRef<TblPC> _TblPC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnFcUidChanging(System.Guid value);
    partial void OnFcUidChanged();
    partial void OnPcUidChanging(System.Guid value);
    partial void OnPcUidChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public TblFCPC()
		{
			this._TblFC = default(EntityRef<TblFC>);
			this._TblPC = default(EntityRef<TblPC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FcUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FcUid
		{
			get
			{
				return this._FcUid;
			}
			set
			{
				if ((this._FcUid != value))
				{
					if (this._TblFC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFcUidChanging(value);
					this.SendPropertyChanging();
					this._FcUid = value;
					this.SendPropertyChanged("FcUid");
					this.OnFcUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PcUid
		{
			get
			{
				return this._PcUid;
			}
			set
			{
				if ((this._PcUid != value))
				{
					if (this._TblPC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPcUidChanging(value);
					this.SendPropertyChanging();
					this._PcUid = value;
					this.SendPropertyChanged("PcUid");
					this.OnPcUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblFC_TblFCPC", Storage="_TblFC", ThisKey="FcUid", OtherKey="Uid", IsForeignKey=true)]
		public TblFC TblFC
		{
			get
			{
				return this._TblFC.Entity;
			}
			set
			{
				TblFC previousValue = this._TblFC.Entity;
				if (((previousValue != value) 
							|| (this._TblFC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblFC.Entity = null;
						previousValue.TblFCPCs.Remove(this);
					}
					this._TblFC.Entity = value;
					if ((value != null))
					{
						value.TblFCPCs.Add(this);
						this._FcUid = value.Uid;
					}
					else
					{
						this._FcUid = default(System.Guid);
					}
					this.SendPropertyChanged("TblFC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPC_TblFCPC", Storage="_TblPC", ThisKey="PcUid", OtherKey="Uid", IsForeignKey=true)]
		public TblPC TblPC
		{
			get
			{
				return this._TblPC.Entity;
			}
			set
			{
				TblPC previousValue = this._TblPC.Entity;
				if (((previousValue != value) 
							|| (this._TblPC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblPC.Entity = null;
						previousValue.TblFCPCs.Remove(this);
					}
					this._TblPC.Entity = value;
					if ((value != null))
					{
						value.TblFCPCs.Add(this);
						this._PcUid = value.Uid;
					}
					else
					{
						this._PcUid = default(System.Guid);
					}
					this.SendPropertyChanged("TblPC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblForm")]
	public partial class TblForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private string _ClassroomId;
		
		private int _Type;
		
		private string _Title;
		
		private string _Data;
		
		private EntitySet<TblFormAnswer> _TblFormAnswers;
		
		private EntityRef<TblClassroom> _TblClassroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnClassroomIdChanging(string value);
    partial void OnClassroomIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public TblForm()
		{
			this._TblFormAnswers = new EntitySet<TblFormAnswer>(new Action<TblFormAnswer>(this.attach_TblFormAnswers), new Action<TblFormAnswer>(this.detach_TblFormAnswers));
			this._TblClassroom = default(EntityRef<TblClassroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._TblClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblForm_TblFormAnswer", Storage="_TblFormAnswers", ThisKey="Uid", OtherKey="FormUid")]
		public EntitySet<TblFormAnswer> TblFormAnswers
		{
			get
			{
				return this._TblFormAnswers;
			}
			set
			{
				this._TblFormAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblForm", Storage="_TblClassroom", ThisKey="ClassroomId", OtherKey="Id", IsForeignKey=true)]
		public TblClassroom TblClassroom
		{
			get
			{
				return this._TblClassroom.Entity;
			}
			set
			{
				TblClassroom previousValue = this._TblClassroom.Entity;
				if (((previousValue != value) 
							|| (this._TblClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblClassroom.Entity = null;
						previousValue.TblForms.Remove(this);
					}
					this._TblClassroom.Entity = value;
					if ((value != null))
					{
						value.TblForms.Add(this);
						this._ClassroomId = value.Id;
					}
					else
					{
						this._ClassroomId = default(string);
					}
					this.SendPropertyChanged("TblClassroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblFormAnswers(TblFormAnswer entity)
		{
			this.SendPropertyChanging();
			entity.TblForm = this;
		}
		
		private void detach_TblFormAnswers(TblFormAnswer entity)
		{
			this.SendPropertyChanging();
			entity.TblForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblFormAnswer")]
	public partial class TblFormAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private System.Guid _FormUid;
		
		private System.Guid _PcUid;
		
		private string _Title;
		
		private string _Data;
		
		private System.DateTime _Received;
		
		private System.Nullable<System.DateTime> _Answered;
		
		private int _Status;
		
		private EntityRef<TblForm> _TblForm;
		
		private EntityRef<TblPC> _TblPC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnFormUidChanging(System.Guid value);
    partial void OnFormUidChanged();
    partial void OnPcUidChanging(System.Guid value);
    partial void OnPcUidChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnReceivedChanging(System.DateTime value);
    partial void OnReceivedChanged();
    partial void OnAnsweredChanging(System.Nullable<System.DateTime> value);
    partial void OnAnsweredChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public TblFormAnswer()
		{
			this._TblForm = default(EntityRef<TblForm>);
			this._TblPC = default(EntityRef<TblPC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FormUid
		{
			get
			{
				return this._FormUid;
			}
			set
			{
				if ((this._FormUid != value))
				{
					if (this._TblForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormUidChanging(value);
					this.SendPropertyChanging();
					this._FormUid = value;
					this.SendPropertyChanged("FormUid");
					this.OnFormUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PcUid
		{
			get
			{
				return this._PcUid;
			}
			set
			{
				if ((this._PcUid != value))
				{
					if (this._TblPC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPcUidChanging(value);
					this.SendPropertyChanging();
					this._PcUid = value;
					this.SendPropertyChanged("PcUid");
					this.OnPcUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Received", DbType="DateTime NOT NULL")]
		public System.DateTime Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answered", DbType="DateTime")]
		public System.Nullable<System.DateTime> Answered
		{
			get
			{
				return this._Answered;
			}
			set
			{
				if ((this._Answered != value))
				{
					this.OnAnsweredChanging(value);
					this.SendPropertyChanging();
					this._Answered = value;
					this.SendPropertyChanged("Answered");
					this.OnAnsweredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblForm_TblFormAnswer", Storage="_TblForm", ThisKey="FormUid", OtherKey="Uid", IsForeignKey=true)]
		public TblForm TblForm
		{
			get
			{
				return this._TblForm.Entity;
			}
			set
			{
				TblForm previousValue = this._TblForm.Entity;
				if (((previousValue != value) 
							|| (this._TblForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblForm.Entity = null;
						previousValue.TblFormAnswers.Remove(this);
					}
					this._TblForm.Entity = value;
					if ((value != null))
					{
						value.TblFormAnswers.Add(this);
						this._FormUid = value.Uid;
					}
					else
					{
						this._FormUid = default(System.Guid);
					}
					this.SendPropertyChanged("TblForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPC_TblFormAnswer", Storage="_TblPC", ThisKey="PcUid", OtherKey="Uid", IsForeignKey=true)]
		public TblPC TblPC
		{
			get
			{
				return this._TblPC.Entity;
			}
			set
			{
				TblPC previousValue = this._TblPC.Entity;
				if (((previousValue != value) 
							|| (this._TblPC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblPC.Entity = null;
						previousValue.TblFormAnswers.Remove(this);
					}
					this._TblPC.Entity = value;
					if ((value != null))
					{
						value.TblFormAnswers.Add(this);
						this._PcUid = value.Uid;
					}
					else
					{
						this._PcUid = default(System.Guid);
					}
					this.SendPropertyChanged("TblPC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblPC")]
	public partial class TblPC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private string _ClassroomId;
		
		private string _Id;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ScUid;
		
		private System.Nullable<System.Guid> _TcUid;
		
		private int _Position;
		
		private bool _Audio;
		
		private bool _Video;
		
		private int _Volume;
		
		private string _Address1;
		
		private string _State;
		
		private string _City;
		
		private string _ZipCode;
		
		private string _Country;
		
		private EntitySet<TblFCPC> _TblFCPCs;
		
		private EntitySet<TblFormAnswer> _TblFormAnswers;
		
		private EntityRef<TblClassroom> _TblClassroom;
		
		private EntityRef<TblTC> _TblTC;
		
		private EntityRef<TblSC> _TblSC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnClassroomIdChanging(string value);
    partial void OnClassroomIdChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnScUidChanging(System.Nullable<System.Guid> value);
    partial void OnScUidChanged();
    partial void OnTcUidChanging(System.Nullable<System.Guid> value);
    partial void OnTcUidChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnAudioChanging(bool value);
    partial void OnAudioChanged();
    partial void OnVideoChanging(bool value);
    partial void OnVideoChanged();
    partial void OnVolumeChanging(int value);
    partial void OnVolumeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public TblPC()
		{
			this._TblFCPCs = new EntitySet<TblFCPC>(new Action<TblFCPC>(this.attach_TblFCPCs), new Action<TblFCPC>(this.detach_TblFCPCs));
			this._TblFormAnswers = new EntitySet<TblFormAnswer>(new Action<TblFormAnswer>(this.attach_TblFormAnswers), new Action<TblFormAnswer>(this.detach_TblFormAnswers));
			this._TblClassroom = default(EntityRef<TblClassroom>);
			this._TblTC = default(EntityRef<TblTC>);
			this._TblSC = default(EntityRef<TblSC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._TblClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScUid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ScUid
		{
			get
			{
				return this._ScUid;
			}
			set
			{
				if ((this._ScUid != value))
				{
					if (this._TblSC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScUidChanging(value);
					this.SendPropertyChanging();
					this._ScUid = value;
					this.SendPropertyChanged("ScUid");
					this.OnScUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TcUid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TcUid
		{
			get
			{
				return this._TcUid;
			}
			set
			{
				if ((this._TcUid != value))
				{
					if (this._TblTC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTcUidChanging(value);
					this.SendPropertyChanging();
					this._TcUid = value;
					this.SendPropertyChanged("TcUid");
					this.OnTcUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audio", DbType="Bit NOT NULL")]
		public bool Audio
		{
			get
			{
				return this._Audio;
			}
			set
			{
				if ((this._Audio != value))
				{
					this.OnAudioChanging(value);
					this.SendPropertyChanging();
					this._Audio = value;
					this.SendPropertyChanged("Audio");
					this.OnAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="Bit NOT NULL")]
		public bool Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int NOT NULL")]
		public int Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(256)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPC_TblFCPC", Storage="_TblFCPCs", ThisKey="Uid", OtherKey="PcUid")]
		public EntitySet<TblFCPC> TblFCPCs
		{
			get
			{
				return this._TblFCPCs;
			}
			set
			{
				this._TblFCPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPC_TblFormAnswer", Storage="_TblFormAnswers", ThisKey="Uid", OtherKey="PcUid")]
		public EntitySet<TblFormAnswer> TblFormAnswers
		{
			get
			{
				return this._TblFormAnswers;
			}
			set
			{
				this._TblFormAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblPC", Storage="_TblClassroom", ThisKey="ClassroomId", OtherKey="Id", IsForeignKey=true)]
		public TblClassroom TblClassroom
		{
			get
			{
				return this._TblClassroom.Entity;
			}
			set
			{
				TblClassroom previousValue = this._TblClassroom.Entity;
				if (((previousValue != value) 
							|| (this._TblClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblClassroom.Entity = null;
						previousValue.TblPCs.Remove(this);
					}
					this._TblClassroom.Entity = value;
					if ((value != null))
					{
						value.TblPCs.Add(this);
						this._ClassroomId = value.Id;
					}
					else
					{
						this._ClassroomId = default(string);
					}
					this.SendPropertyChanged("TblClassroom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTC_TblPC", Storage="_TblTC", ThisKey="TcUid", OtherKey="Uid", IsForeignKey=true)]
		public TblTC TblTC
		{
			get
			{
				return this._TblTC.Entity;
			}
			set
			{
				TblTC previousValue = this._TblTC.Entity;
				if (((previousValue != value) 
							|| (this._TblTC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTC.Entity = null;
						previousValue.TblPCs.Remove(this);
					}
					this._TblTC.Entity = value;
					if ((value != null))
					{
						value.TblPCs.Add(this);
						this._TcUid = value.Uid;
					}
					else
					{
						this._TcUid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TblTC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSC_TblPC", Storage="_TblSC", ThisKey="ScUid", OtherKey="Uid", IsForeignKey=true)]
		public TblSC TblSC
		{
			get
			{
				return this._TblSC.Entity;
			}
			set
			{
				TblSC previousValue = this._TblSC.Entity;
				if (((previousValue != value) 
							|| (this._TblSC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblSC.Entity = null;
						previousValue.TblPCs.Remove(this);
					}
					this._TblSC.Entity = value;
					if ((value != null))
					{
						value.TblPCs.Add(this);
						this._ScUid = value.Uid;
					}
					else
					{
						this._ScUid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TblSC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblFCPCs(TblFCPC entity)
		{
			this.SendPropertyChanging();
			entity.TblPC = this;
		}
		
		private void detach_TblFCPCs(TblFCPC entity)
		{
			this.SendPropertyChanging();
			entity.TblPC = null;
		}
		
		private void attach_TblFormAnswers(TblFormAnswer entity)
		{
			this.SendPropertyChanging();
			entity.TblPC = this;
		}
		
		private void detach_TblFormAnswers(TblFormAnswer entity)
		{
			this.SendPropertyChanging();
			entity.TblPC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblSC")]
	public partial class TblSC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private string _ClassroomId;
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<TblPC> _TblPCs;
		
		private EntitySet<TblModerator> _TblModerators;
		
		private EntityRef<TblClassroom> _TblClassroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnClassroomIdChanging(string value);
    partial void OnClassroomIdChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TblSC()
		{
			this._TblPCs = new EntitySet<TblPC>(new Action<TblPC>(this.attach_TblPCs), new Action<TblPC>(this.detach_TblPCs));
			this._TblModerators = new EntitySet<TblModerator>(new Action<TblModerator>(this.attach_TblModerators), new Action<TblModerator>(this.detach_TblModerators));
			this._TblClassroom = default(EntityRef<TblClassroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._TblClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSC_TblPC", Storage="_TblPCs", ThisKey="Uid", OtherKey="ScUid")]
		public EntitySet<TblPC> TblPCs
		{
			get
			{
				return this._TblPCs;
			}
			set
			{
				this._TblPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSC_TblModerator", Storage="_TblModerators", ThisKey="Uid", OtherKey="ScUid")]
		public EntitySet<TblModerator> TblModerators
		{
			get
			{
				return this._TblModerators;
			}
			set
			{
				this._TblModerators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblSC", Storage="_TblClassroom", ThisKey="ClassroomId", OtherKey="Id", IsForeignKey=true)]
		public TblClassroom TblClassroom
		{
			get
			{
				return this._TblClassroom.Entity;
			}
			set
			{
				TblClassroom previousValue = this._TblClassroom.Entity;
				if (((previousValue != value) 
							|| (this._TblClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblClassroom.Entity = null;
						previousValue.TblSCs.Remove(this);
					}
					this._TblClassroom.Entity = value;
					if ((value != null))
					{
						value.TblSCs.Add(this);
						this._ClassroomId = value.Id;
					}
					else
					{
						this._ClassroomId = default(string);
					}
					this.SendPropertyChanged("TblClassroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblPCs(TblPC entity)
		{
			this.SendPropertyChanging();
			entity.TblSC = this;
		}
		
		private void detach_TblPCs(TblPC entity)
		{
			this.SendPropertyChanging();
			entity.TblSC = null;
		}
		
		private void attach_TblModerators(TblModerator entity)
		{
			this.SendPropertyChanging();
			entity.TblSC = this;
		}
		
		private void detach_TblModerators(TblModerator entity)
		{
			this.SendPropertyChanging();
			entity.TblSC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblModerator")]
	public partial class TblModerator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Uid;
		
		private string _ClassroomId;
		
		private string _Id;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ScUid;
		
		private System.Nullable<System.Guid> _TcUid;
		
		private int _Position;
		
		private bool _Audio;
		
		private bool _Video;
		
		private int _Volume;
		
		private string _Address1;
		
		private string _State;
		
		private string _City;
		
		private string _ZipCode;
		
		private string _Country;
		
		private EntityRef<TblClassroom> _TblClassroom;
		
		private EntityRef<TblSC> _TblSC;
		
		private EntityRef<TblTC> _TblTC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(System.Guid value);
    partial void OnUidChanged();
    partial void OnClassroomIdChanging(string value);
    partial void OnClassroomIdChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnScUidChanging(System.Nullable<System.Guid> value);
    partial void OnScUidChanged();
    partial void OnTcUidChanging(System.Nullable<System.Guid> value);
    partial void OnTcUidChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnAudioChanging(bool value);
    partial void OnAudioChanged();
    partial void OnVideoChanging(bool value);
    partial void OnVideoChanged();
    partial void OnVolumeChanging(int value);
    partial void OnVolumeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public TblModerator()
		{
			this._TblClassroom = default(EntityRef<TblClassroom>);
			this._TblSC = default(EntityRef<TblSC>);
			this._TblTC = default(EntityRef<TblTC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._TblClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScUid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ScUid
		{
			get
			{
				return this._ScUid;
			}
			set
			{
				if ((this._ScUid != value))
				{
					if (this._TblSC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScUidChanging(value);
					this.SendPropertyChanging();
					this._ScUid = value;
					this.SendPropertyChanged("ScUid");
					this.OnScUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TcUid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TcUid
		{
			get
			{
				return this._TcUid;
			}
			set
			{
				if ((this._TcUid != value))
				{
					if (this._TblTC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTcUidChanging(value);
					this.SendPropertyChanging();
					this._TcUid = value;
					this.SendPropertyChanged("TcUid");
					this.OnTcUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audio", DbType="Bit NOT NULL")]
		public bool Audio
		{
			get
			{
				return this._Audio;
			}
			set
			{
				if ((this._Audio != value))
				{
					this.OnAudioChanging(value);
					this.SendPropertyChanging();
					this._Audio = value;
					this.SendPropertyChanged("Audio");
					this.OnAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="Bit NOT NULL")]
		public bool Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int NOT NULL")]
		public int Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(256)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblClassroom_TblModerator", Storage="_TblClassroom", ThisKey="ClassroomId", OtherKey="Id", IsForeignKey=true)]
		public TblClassroom TblClassroom
		{
			get
			{
				return this._TblClassroom.Entity;
			}
			set
			{
				TblClassroom previousValue = this._TblClassroom.Entity;
				if (((previousValue != value) 
							|| (this._TblClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblClassroom.Entity = null;
						previousValue.TblModerators.Remove(this);
					}
					this._TblClassroom.Entity = value;
					if ((value != null))
					{
						value.TblModerators.Add(this);
						this._ClassroomId = value.Id;
					}
					else
					{
						this._ClassroomId = default(string);
					}
					this.SendPropertyChanged("TblClassroom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSC_TblModerator", Storage="_TblSC", ThisKey="ScUid", OtherKey="Uid", IsForeignKey=true)]
		public TblSC TblSC
		{
			get
			{
				return this._TblSC.Entity;
			}
			set
			{
				TblSC previousValue = this._TblSC.Entity;
				if (((previousValue != value) 
							|| (this._TblSC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblSC.Entity = null;
						previousValue.TblModerators.Remove(this);
					}
					this._TblSC.Entity = value;
					if ((value != null))
					{
						value.TblModerators.Add(this);
						this._ScUid = value.Uid;
					}
					else
					{
						this._ScUid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TblSC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTC_TblModerator", Storage="_TblTC", ThisKey="TcUid", OtherKey="Uid", IsForeignKey=true)]
		public TblTC TblTC
		{
			get
			{
				return this._TblTC.Entity;
			}
			set
			{
				TblTC previousValue = this._TblTC.Entity;
				if (((previousValue != value) 
							|| (this._TblTC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTC.Entity = null;
						previousValue.TblModerators.Remove(this);
					}
					this._TblTC.Entity = value;
					if ((value != null))
					{
						value.TblModerators.Add(this);
						this._TcUid = value.Uid;
					}
					else
					{
						this._TcUid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TblTC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
